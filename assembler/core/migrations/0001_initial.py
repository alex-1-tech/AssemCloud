# Generated by Django 4.2.20 on 2025-05-13 11:16

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("first_name", models.CharField(max_length=100, verbose_name="Имя")),
                ("last_name", models.CharField(max_length=100, verbose_name="Фамилия")),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="Почта"
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Номер телефона должен быть в формате: '+99999999999'. От 9 до 15 цифр.",
                                regex="^\\+?\\d{9,15}$",
                            )
                        ],
                        verbose_name="Телефон",
                    ),
                ),
                ("address", models.TextField(blank=True, verbose_name="Адрес")),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Активен"),
                ),
                (
                    "is_staff",
                    models.BooleanField(default=False, verbose_name="Сотрудник"),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="Дата регистрации",
                    ),
                ),
                ("is_email_verified", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name": "Пользователь",
                "verbose_name_plural": "Пользователи",
                "db_table": "users",
            },
        ),
        migrations.CreateModel(
            name="Blueprint",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "weight",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Вес (кг)",
                    ),
                ),
                (
                    "scale",
                    models.CharField(blank=True, max_length=50, verbose_name="Масштаб"),
                ),
                (
                    "version",
                    models.CharField(blank=True, max_length=50, verbose_name="Версия"),
                ),
                (
                    "naming_scheme",
                    models.CharField(max_length=100, verbose_name="Схема наименования"),
                ),
                (
                    "scheme_file",
                    models.FileField(
                        upload_to="blueprints/",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["pdf"]
                            )
                        ],
                        verbose_name="Файл чертежа (PDF)",
                    ),
                ),
                (
                    "step_file",
                    models.FileField(
                        upload_to="steps/",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["step"]
                            )
                        ],
                        verbose_name="Файл чертежа (STEP)",
                    ),
                ),
            ],
            options={
                "verbose_name": "Чертёж",
                "verbose_name_plural": "Чертежи",
                "db_table": "blueprints",
                "ordering": ["-id"],
            },
        ),
        migrations.CreateModel(
            name="ChangesLog",
            fields=[
                ("log_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "table_name",
                    models.CharField(max_length=100, verbose_name="Имя таблицы"),
                ),
                ("record_id", models.BigIntegerField(verbose_name="ID записи")),
                (
                    "column_name",
                    models.CharField(max_length=100, verbose_name="Имя столбца"),
                ),
                (
                    "old_value",
                    models.TextField(
                        blank=True, null=True, verbose_name="Старое значение"
                    ),
                ),
                (
                    "new_value",
                    models.TextField(
                        blank=True, null=True, verbose_name="Новое значение"
                    ),
                ),
                (
                    "changed_on",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата изменения"
                    ),
                ),
            ],
            options={
                "verbose_name": "Журнал изменений",
                "verbose_name_plural": "Журналы изменений",
                "db_table": "changes_log",
                "ordering": ["-changed_on"],
            },
        ),
        migrations.CreateModel(
            name="Client",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=150, unique=True, verbose_name="Имя клиента"
                    ),
                ),
                ("country", models.CharField(max_length=100, verbose_name="Страна")),
                (
                    "phone",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Номер телефона должен быть в формате: '+99999999999'. От 9 до 15 цифр.",
                                regex="^\\+?\\d{9,15}$",
                            )
                        ],
                    ),
                ),
            ],
            options={
                "verbose_name": "Клиент",
                "verbose_name_plural": "Клиенты",
                "db_table": "clients",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Machine",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=255, verbose_name="Название машины"),
                ),
                (
                    "version",
                    models.CharField(max_length=50, verbose_name="Версия машины"),
                ),
            ],
            options={
                "verbose_name": "Машина",
                "verbose_name_plural": "Машины",
                "db_table": "machines",
            },
        ),
        migrations.CreateModel(
            name="Manufacturer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=150,
                        unique=True,
                        verbose_name="Название производителя",
                    ),
                ),
                ("country", models.CharField(max_length=100, verbose_name="Страна")),
                (
                    "language",
                    models.CharField(blank=True, max_length=50, verbose_name="Язык"),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Номер телефона должен быть в формате: '+99999999999'. От 9 до 15 цифр.",
                                regex="^\\+?\\d{9,15}$",
                            )
                        ],
                    ),
                ),
            ],
            options={
                "verbose_name": "Производитель",
                "verbose_name_plural": "Производители",
                "db_table": "manufacturers",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Module",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(auto_now_add=True, verbose_name="Создано"),
                ),
                (
                    "updated_on",
                    models.DateTimeField(auto_now=True, verbose_name="Обновлено"),
                ),
                (
                    "part_number",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        unique=True,
                        validators=[django.core.validators.MinLengthValidator(3)],
                        verbose_name="Артикул",
                    ),
                ),
                (
                    "serial",
                    models.CharField(max_length=100, verbose_name="Серийный номер"),
                ),
                (
                    "name",
                    models.CharField(max_length=255, verbose_name="Название модуля"),
                ),
                ("version", models.CharField(max_length=50, verbose_name="Версия")),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Описание"),
                ),
                (
                    "module_status",
                    models.CharField(
                        choices=[
                            ("in_progress", "В разработке"),
                            ("completed", "Завершен"),
                            ("cancelled", "Отменен"),
                        ],
                        default="in_progress",
                        max_length=20,
                        verbose_name="Статус",
                    ),
                ),
                (
                    "blueprint",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.blueprint",
                        verbose_name="Чертёж",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Создано пользователем",
                    ),
                ),
                (
                    "machine",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="modules",
                        to="core.machine",
                        verbose_name="Машина",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="submodules",
                        to="core.module",
                        verbose_name="Родительский модуль",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Обновлено пользователем",
                    ),
                ),
            ],
            options={
                "verbose_name": "Модуль",
                "verbose_name_plural": "Модули",
                "db_table": "modules",
                "ordering": ["-updated_on"],
            },
        ),
        migrations.CreateModel(
            name="Role",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="Название роли"
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Описание роли"),
                ),
            ],
            options={
                "verbose_name": "Роль",
                "verbose_name_plural": "Роли",
                "db_table": "roles",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="UserRole",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "role_description",
                    models.TextField(
                        blank=True, verbose_name="Индивидуальное описание роли"
                    ),
                ),
                (
                    "role",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="users",
                        to="core.role",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="roles",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Связь Роль-Пользователь",
                "verbose_name_plural": "Связи Роль-Пользователь",
                "db_table": "user_roles",
            },
        ),
        migrations.CreateModel(
            name="Part",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(auto_now_add=True, verbose_name="Создано"),
                ),
                (
                    "updated_on",
                    models.DateTimeField(auto_now=True, verbose_name="Обновлено"),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Название")),
                (
                    "part_description",
                    models.TextField(
                        blank=True, null=True, verbose_name="Описание детали"
                    ),
                ),
                (
                    "material",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Материал"
                    ),
                ),
                (
                    "manufacture_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Дата производства"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Создано пользователем",
                    ),
                ),
                (
                    "manufacturer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="parts_manufactured",
                        to="core.manufacturer",
                        verbose_name="Производитель",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Обновлено пользователем",
                    ),
                ),
            ],
            options={
                "verbose_name": "Деталь",
                "verbose_name_plural": "Детали",
                "db_table": "parts",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="ModulePart",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quantity",
                    models.PositiveIntegerField(
                        default=1,
                        help_text="Количество деталей в модуле",
                        verbose_name="Количество",
                    ),
                ),
                (
                    "module",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="module_parts",
                        to="core.module",
                        verbose_name="Модуль",
                    ),
                ),
                (
                    "part",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="part_modules",
                        to="core.part",
                        verbose_name="Деталь",
                    ),
                ),
            ],
            options={
                "verbose_name": "Связь Деталь-Модуль",
                "verbose_name_plural": "Связи Деталь-Модуль",
                "db_table": "module_part",
            },
        ),
        migrations.CreateModel(
            name="MachineClient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата добавления"
                    ),
                ),
                ("comment", models.TextField(blank=True, verbose_name="Комментарий")),
                (
                    "client",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.client",
                        verbose_name="Клиент",
                    ),
                ),
                (
                    "machine",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.machine",
                        verbose_name="Машина",
                    ),
                ),
            ],
            options={
                "verbose_name": "Связь Машина-Клиент",
                "verbose_name_plural": "Связи Машина-Клиент",
                "db_table": "machine_clients",
            },
        ),
        migrations.AddField(
            model_name="machine",
            name="clients",
            field=models.ManyToManyField(
                related_name="machines",
                through="core.MachineClient",
                to="core.client",
                verbose_name="Клиент",
            ),
        ),
        migrations.AddIndex(
            model_name="client",
            index=models.Index(fields=["name"], name="clients_name_0bc5f0_idx"),
        ),
        migrations.AddIndex(
            model_name="client",
            index=models.Index(fields=["country"], name="clients_country_9adf8e_idx"),
        ),
        migrations.AddField(
            model_name="changeslog",
            name="changed_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to=settings.AUTH_USER_MODEL,
                verbose_name="Пользователь, который изменил",
            ),
        ),
        migrations.AddField(
            model_name="blueprint",
            name="approver",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="approved_blueprints",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Утвердивший",
            ),
        ),
        migrations.AddField(
            model_name="blueprint",
            name="chief_designer",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="chief_designed_blueprints",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Главный конструктор",
            ),
        ),
        migrations.AddField(
            model_name="blueprint",
            name="developer",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="developed_blueprints",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Разработчик",
            ),
        ),
        migrations.AddField(
            model_name="blueprint",
            name="lead_designer",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="lead_designed_blueprints",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Ведущий конструктор",
            ),
        ),
        migrations.AddField(
            model_name="blueprint",
            name="manufacturer",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.RESTRICT,
                to="core.manufacturer",
                verbose_name="Производитель",
            ),
        ),
        migrations.AddField(
            model_name="blueprint",
            name="validator",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="validated_blueprints",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Проверяющий",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="groups",
            field=models.ManyToManyField(
                blank=True,
                help_text="Группы, к которым принадлежит пользователь.",
                related_name="custom_user_set",
                related_query_name="custom_user",
                to="auth.group",
                verbose_name="группы",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="user_permissions",
            field=models.ManyToManyField(
                blank=True,
                help_text="Specific permissions for this user.",
                related_name="user_set",
                related_query_name="user",
                to="auth.permission",
                verbose_name="user permissions",
            ),
        ),
        migrations.AddConstraint(
            model_name="userrole",
            constraint=models.UniqueConstraint(
                fields=("user", "role"), name="unique_user_role"
            ),
        ),
        migrations.AddIndex(
            model_name="part",
            index=models.Index(
                fields=["manufacture_date"], name="parts_manufac_3d816d_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="modulepart",
            constraint=models.CheckConstraint(
                check=models.Q(("quantity__gt", 0)), name="quantity_positive"
            ),
        ),
        migrations.AddConstraint(
            model_name="modulepart",
            constraint=models.UniqueConstraint(
                fields=("module", "part"), name="unique_module_part"
            ),
        ),
        migrations.AddIndex(
            model_name="module",
            index=models.Index(fields=["serial"], name="modules_serial_6d8893_idx"),
        ),
        migrations.AddIndex(
            model_name="module",
            index=models.Index(
                fields=["part_number"], name="modules_part_nu_dc9714_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="module",
            index=models.Index(fields=["name"], name="modules_name_0c405d_idx"),
        ),
        migrations.AddIndex(
            model_name="module",
            index=models.Index(
                fields=["machine", "serial"], name="modules_machine_58be12_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="machineclient",
            unique_together={("machine", "client")},
        ),
        migrations.AddConstraint(
            model_name="machine",
            constraint=models.UniqueConstraint(
                fields=("name", "version"), name="unique_name_per_version"
            ),
        ),
        migrations.AddIndex(
            model_name="changeslog",
            index=models.Index(
                fields=["table_name"], name="changes_log_table_n_aa8c4e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="changeslog",
            index=models.Index(
                fields=["record_id"], name="changes_log_record__cb143a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="changeslog",
            index=models.Index(
                fields=["changed_on"], name="changes_log_changed_0a57c8_idx"
            ),
        ),
    ]
