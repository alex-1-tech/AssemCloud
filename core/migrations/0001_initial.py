# Generated by Django 5.2.4 on 2025-07-30 08:38

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Machine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial_number', models.CharField(max_length=100, unique=True, verbose_name='Серийный номер')),
                ('software', models.CharField(choices=[('Кальмар', 'Кальмар'), ('Фазар', 'Фазар')], max_length=100, verbose_name='ПО')),
                ('software_version', models.CharField(max_length=50, verbose_name='Версия ПО')),
                ('tablet_charger_voltage', models.CharField(default='15V', max_length=50, verbose_name='Зарядка планшета (напряжение)')),
                ('charger_model', models.CharField(choices=[('1', 'Модель 1'), ('2', 'Модель 2'), ('3', 'Модель 3')], max_length=50, verbose_name='Модель зарядного устройства')),
                ('charger_voltage', models.CharField(default='16.8V', max_length=50, verbose_name='Напряжение зарядного устройства')),
                ('charger_current', models.CharField(default='5A', max_length=50, verbose_name='Ток зарядного устройства')),
                ('power_adapter', models.CharField(choices=[('15V 4.5A 100-240V (Dopler)', '15V 4.5A 100-240V (Dopler)'), ('12V 5A 100-240V (AOS)', '12V 5A 100-240V (AOS)')], max_length=100, verbose_name='Адаптер питания')),
                ('battery_voltage', models.CharField(choices=[('15V (Dopler)', '15V (Dopler)'), ('12V (AOS)', '12V (AOS)')], max_length=50, verbose_name='Напряжение батареи')),
                ('battery_capacity', models.CharField(default='24А/ч', max_length=50, verbose_name='Ёмкость батареи')),
                ('battery_serial', models.CharField(max_length=100, verbose_name='Серийный номер батареи')),
                ('uzk_type', models.CharField(choices=[('16/64 (кальмар)', '16/64 (кальмар)'), ('16/128 (фазар)', '16/128 (фазар)')], max_length=50, verbose_name='Тип УЗК')),
                ('uzk_serial', models.CharField(max_length=100, verbose_name='Серийный номер УЗК')),
                ('uzk_manufacturer', models.CharField(choices=[('AOS (Франция)', 'AOS (Франция)'), ('Dopler (Китай)', 'Dopler (Китай)')], max_length=100, verbose_name='Производитель УЗК')),
                ('driver_type', models.CharField(choices=[('AOS', 'AOS'), ('Dopler', 'Dopler')], max_length=100, verbose_name='Тип драйвера')),
                ('driver_serial', models.CharField(max_length=100, verbose_name='Серийный номер драйвера')),
                ('soc_serial', models.CharField(max_length=100, verbose_name='Серийный номер SOC')),
                ('cable_tip', models.CharField(choices=[('RJ45/RJ45', 'RJ45/RJ45'), ('RJ45/RJ45 (защищенный)', 'RJ45/RJ45 (защищенный)')], max_length=50, verbose_name='Тип наконечника кабеля')),
                ('chassis_type', models.CharField(choices=[('стойка', 'Стойка'), ('тележка', 'Тележка')], max_length=50, verbose_name='Тип рамы шасси')),
                ('rsp_version', models.CharField(choices=[('1', 'Версия 1'), ('2', 'Версия 2'), ('3', 'Версия 3'), ('4', 'Версия 4')], max_length=20, verbose_name='Версия исполнения РСП')),
                ('scanner_type', models.CharField(choices=[('Р50', 'Р50'), ('Р65', 'Р65'), ('UIC60', 'UIC60'), ('IRS52', 'IRS52')], max_length=50, verbose_name='Тип сканера')),
                ('scanner_version', models.CharField(choices=[('Стационарный (РСП)', 'Стационарный (РСП)'), ('Путевой', 'Путевой')], max_length=50, verbose_name='Версия сканера')),
                ('tablet_brand', models.CharField(max_length=50, verbose_name='Фирма планшета')),
                ('tablet_model', models.CharField(max_length=100, verbose_name='Модель планшета')),
                ('tablet_serial', models.CharField(max_length=100, verbose_name='Серийный номер планшета')),
                ('tablet_os', models.CharField(max_length=50, verbose_name='ОС планшета')),
                ('tablet_driver1', models.CharField(max_length=100, verbose_name='DRIVER1')),
                ('tablet_driver1_version', models.CharField(max_length=50, verbose_name='Версия DRIVER1')),
                ('tablet_driver2', models.CharField(max_length=100, verbose_name='DRIVER2')),
                ('tablet_driver2_version', models.CharField(max_length=50, verbose_name='Версия DRIVER2')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
            ],
            options={
                'verbose_name': 'Машина',
                'verbose_name_plural': 'Машины',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Converter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('наклонный', 'Наклонный'), ('прямой', 'Прямой'), ('ручной', 'Ручной')], max_length=50, verbose_name='Тип преобразователя')),
                ('serial', models.CharField(max_length=100, verbose_name='Серийный номер преобразователя')),
                ('frequency', models.CharField(max_length=50, verbose_name='Рабочая частота')),
                ('release_date', models.DateField(blank=True, null=True, verbose_name='Дата выпуска')),
                ('connector_type', models.CharField(choices=[('RJ45/RJ45', 'RJ45/RJ45'), ('RJ45/RJ45(защищённый)', 'RJ45/RJ45 (защищённый)')], max_length=50, verbose_name='Тип разъёма')),
                ('machine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='converters', to='core.machine', verbose_name='Машина')),
            ],
            options={
                'verbose_name': 'Преобразователь',
                'verbose_name_plural': 'Преобразователи',
            },
        ),
    ]
