# Generated by Django 5.2.4 on 2025-07-30 11:58

import core.validators
import datetime
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Kalmar32',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial_number', models.CharField(help_text='Уникальный серийный номер оборудования', max_length=50, unique=True, validators=[django.core.validators.MinLengthValidator(1), django.core.validators.MaxLengthValidator(50), core.validators.validate_serial_number_format], verbose_name='Серийный номер')),
                ('shipment_date', models.DateField(default=datetime.date.today, help_text='Дата отгрузки оборудования со склада', verbose_name='Дата отгрузки')),
                ('case_number', models.CharField(blank=True, help_text='Номер кейса для хранения оборудования', max_length=50, validators=[django.core.validators.MaxLengthValidator(50)], verbose_name='Номер кейса')),
                ('first_phased_array_converters', models.CharField(blank=True, help_text='S/n первого преобразователя на фазированной решетке', max_length=50, validators=[django.core.validators.MaxLengthValidator(50)], verbose_name='Преобразователи РА2.25L16 1.1х10-17')),
                ('second_phased_array_converters', models.CharField(blank=True, help_text='S/n второго преобразователя на фазированной решетке', max_length=50, validators=[django.core.validators.MaxLengthValidator(50)], verbose_name='Преобразователи РА2.25L16 1.1х10-17')),
                ('battery_case', models.CharField(blank=True, help_text='Серийный номер корпуса аккумулятора', max_length=50, validators=[django.core.validators.MaxLengthValidator(50)], verbose_name='Корпус АКБ')),
                ('aos_block', models.CharField(blank=True, help_text='Номер блока AOS (распределительная коробка и коробка энкодеров)', max_length=50, validators=[django.core.validators.MaxLengthValidator(50)], verbose_name='Блок AOS')),
                ('flash_drive', models.CharField(blank=True, help_text="Наличие флеш-накопителя с ПО 'Кальмар 32+'", max_length=50, validators=[django.core.validators.MaxLengthValidator(50)], verbose_name='Флеш-накопитель с ПО')),
                ('co3r_measure', models.CharField(blank=True, help_text='Номер меры СО-3Р', max_length=50, validators=[django.core.validators.MaxLengthValidator(50)], verbose_name='Мера СО-3Р')),
                ('calibration_certificate', models.CharField(blank=True, help_text='Номер сертификата калибровки', max_length=100, validators=[django.core.validators.MaxLengthValidator(100)], verbose_name='Сертификат калибровки')),
                ('calibration_date', models.DateField(blank=True, help_text='Дата последней калибровки оборудования', null=True, verbose_name='Дата калибровки')),
                ('has_tablet_screws', models.BooleanField(default=False, help_text='Наличие винтов 4х8мм для крепления планшета (4 шт)', verbose_name='Винты для планшета')),
                ('has_ethernet_cable', models.BooleanField(default=False, help_text='Наличие патч-корда 0.5м, 100Мбит/сек', verbose_name='Интернет кабель')),
                ('battery_charger', models.CharField(blank=True, help_text='Номер сетевой зарядки аккумулятора', max_length=50, validators=[django.core.validators.MaxLengthValidator(50)], verbose_name='Сетевая зарядка аккумулятора')),
                ('tablet_charger', models.CharField(blank=True, help_text='Номер зарядки для планшета', max_length=50, validators=[django.core.validators.MaxLengthValidator(50)], verbose_name='Зарядка планшета')),
                ('has_tool_kit', models.BooleanField(default=False, help_text='Наличие набора инструментов (сумка, шестигранники, отвертка, пассатижи)', verbose_name='Набор инструментов')),
                ('software_check', models.CharField(blank=True, help_text='Результаты проверки работоспособности ПО', max_length=200, validators=[django.core.validators.MaxLengthValidator(200)], verbose_name='Проверка ПО')),
                ('photo_url', models.URLField(blank=True, help_text='URL фотографии оборудования', validators=[django.core.validators.URLValidator()], verbose_name='Фото')),
                ('weight', models.FloatField(blank=True, help_text='Вес оборудования с упаковкой в килограммах', null=True, validators=[core.validators.validate_weight_positive], verbose_name='Вес с упаковкой')),
                ('notes', models.TextField(blank=True, help_text='Дополнительные заметки по оборудованию', verbose_name='Примечания')),
                ('manual_inclined', models.CharField(blank=True, help_text='Номер ручного наклонного РА2.25L16 0.9х10-17', max_length=50, validators=[django.core.validators.MaxLengthValidator(50)], verbose_name='Ручной наклонный преобразователь')),
                ('straight', models.CharField(blank=True, help_text='Номер прямого 0° РА5.0L16 0.6х10-17', max_length=50, validators=[django.core.validators.MaxLengthValidator(50)], verbose_name='Прямой преобразователь')),
                ('video_url', models.URLField(blank=True, help_text='URL видео оборудования', validators=[django.core.validators.URLValidator()], verbose_name='Видео')),
            ],
            options={
                'verbose_name': 'Кальмар32',
                'verbose_name_plural': 'Кальмары32',
                'ordering': ['-shipment_date', 'serial_number'],
                'constraints': [models.UniqueConstraint(fields=('serial_number',), name='unique_serial_number', violation_error_message='Кальмар32 с таким серийным номером уже существует')],
            },
        ),
    ]
